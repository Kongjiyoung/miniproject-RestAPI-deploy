package com.many.miniproject1.user;

import org.junit.jupiter.api.Test;

import java.io.File;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Path;
import java.util.Base64;

public class UserTest {

    @Test
    public void imageTest() {
        base64();
    }

    public static void base64() {
        String encodedImageData = "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"; // 여기에 인코딩된 이미지 데이터를 넣습니다.
        byte[] decodedBytes = Base64.getDecoder().decode(encodedImageData);

        try {
            Path path = Path.of("이미지!!!!!!!!!!!!!.jpg"); // 저장할 파일 경로와 이름
            Files.write(path, decodedBytes); // 바이트 배열을 파일로 저장
        } catch (IOException e) {
            e.printStackTrace();
        }
    }


}
